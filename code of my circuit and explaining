#The code of the servo

/*
 * The code of the servo
 * This code is written to control the position of the RC cleaner
 * Since I don't know how to use the remote controlled yet, I used
 * button instead.
 * From my desigh, when you push the left button, the servo will 
 * trun to the left and when you push the right button, 
 * the servo will trun to the right.
 */
#include <Servo.h>    //change the mode of the motor

 const int buttonPin = 2;   //left button connected to pin 2
 const int buttonPin1 = 3;  //right button connected to pin 3
Servo myservo;              //the servo connect to pin 9
int pos = 90;               //initialize the position of servo
 
void setup() 
{ 
  // initialize the servo pin as an input:
  myservo.attach(9); 
  // initialize the pushbutton pin as an input: 
  pinMode(buttonPin, INPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin1, INPUT); 
} 
 
 void loop() 
{           
  if (digitalRead(buttonPin) == HIGH)  //if the left button is pushed
  {
    pos = 45;  // the servo turns to left
  }
  else if (digitalRead(buttonPin1) == HIGH) //if the right button is pushed
  {
    pos = 135;  // the servo turns to right              
  }
  else 
  {
    pos = 90;   //if no button is pushed, turn the position foward
  }
    myservo.write(pos);  //move the servo           
    delay(30);           //delay 30 unit time to make the program more stable.           
} 
/******************************************************************************************************






*******************************************************************************************************/
#code of the motor (fan)

/*
 * The code of the Motor (For the Fan)
 * this code is just for the fan.
 * when you push the button, the fan stats.
 * When you push it again, the fan turns off.
 */
const int buttonPin = 12;  //The Pin of button connect to 12
const int motorPin = 10;   //The Pin of the Mottor connect to 10

int motormode = 1;     //initialize the motor mode, which is off.
void setup() 
{
  //initialize the motor as an output
  pinMode(motorPin, OUTPUT);  
  //initialize the button as an input
  pinMode(buttonPin, INPUT);
}

void loop()
{ 
  if (digitalRead(buttonPin) == HIGH) 
  //if the button is pushed
  {  
    //change the mode of the motor
    motormode = motormode + 1;
    //if a incorrect number shows up
    if (motormode == 3)
    {
      //initialize the number again
      motormode = 1;
    }
    delay(300);//delay 30 unit time to make it more stable
  }


  if (motormode == 1) //if the mode of motor is off
  {
    digitalWrite(motorPin, LOW);//turn off the motor
  }
  else
  {
    digitalWrite(motorPin, HIGH);//if else, turn on the motor
  }
}
/******************************************************************************************************






*******************************************************************************************************/
#code of the motor   (for the motion) 
/*
 * The code of the Motor (For the Fan)
 * this code is just for the fan.
 * when you push the button, the fan stats.
 * When you push it again, the fan turns off.
 */
const int buttonPin = 12;  //The Pin of button connect to 12
const int buttonPin1 = 4;
const int motorPin = 10;   //The Pin of the Mottor connect to 10

int motormode = 1;     //initialize the motor mode, which is off.
void setup() 
{
  //initialize the motor as an output
  pinMode(motorPin, OUTPUT);  
  //initialize the button as an input
  pinMode(buttonPin, INPUT);
  pinMode(buttonPin1, INPUT);
}

void loop()
{ 
  if (digitalRead(buttonPin) == HIGH) 
  //if the button is pushed
  {  
    digitalWrite(motorPin, HIGH);//if else, turn on the motor
  }
  else if (digitalRead(buttonPin) == HIGH) 
  {
    analogWrite(motorPin, -250);
  }
  else digitalWrite(motorPin, LOW);
}
